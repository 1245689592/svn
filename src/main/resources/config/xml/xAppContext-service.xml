<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd">


	<!--Redis 数据库设置  不使用
	<bean  id="jedisPoolConfig"  class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="$${redis.pool.maxActive}" />
	    <property name="maxIdle" value="$${redis.pool.maxIdle}" />
	    <property name="maxWaitMillis" value="$${redis.pool.maxWait}" />
		<property name="testOnBorrow"  value="$${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="$${redis.server.ip}" />
        <property name="port" value="$${redis.server.port}" />
        <property name="timeout" value="$${redis.server.timeout}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="password" value="$${redis.password}" />
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnectionFactory" >
		<property name="keySerializer">
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="valueSerializer">
				<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
	</bean>-->
	
	<!-- mongo服务类 可选 开启后使用mongo缓存在线车联信息 且提供范围查询功能 -->
<!-- 	<mongo:db-factory username="$${mongo.username}" password="$${mongo.password}" host="$${mongo.ip}" port="$${mongo.port}" dbname="$${mongo.db}"/> -->
<!-- 	<mongo:db-factory  host="$${mongo.ip}" port="$${mongo.port}" dbname="$${mongo.db}"/> -->


<!--     <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"> -->
<!--         <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/> -->
<!--     </bean> -->

<!--     <mongo:mapping-converter id="converter" db-factory-ref="mongoDbFactory"/> -->
<!--     <bean id="gridFsTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate"> -->
<!--       <constructor-arg ref="mongoDbFactory"/> -->
<!--       <constructor-arg ref="converter"/> -->
<!--     </bean>  -->
    
<!--     <bean id="mongoFactory" class="com.cm.mongo.holder.MongoClientFactory" init-method="init"> -->
<!--     	<constructor-arg value="$${mongo.config}"/> -->
<!--     </bean> -->
	
	<bean id="commonMongoHolder" class="com.cm.mongo.holder.CommonMongoHolder">
    	<constructor-arg ref="mongoFactory"/>
    	<constructor-arg value="common"/>
    </bean>
	
	<bean id="dynamicMongoHolder" class="com.cm.mongo.holder.DynamicMongoHolder">
    	<constructor-arg ref="mongoFactory"/>
    	<constructor-arg value="dynamic"/>
    </bean>
</beans>